%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 6.0
%%AI8_CreatorVersion: 8.0.1
%%For: (Gary V Stewart) (Cisco Systems, Inc.)
%%Title: (Mac woman.ps)
%%CreationDate: (2/6/2001) (10:30 AM)
%%BoundingBox: 274 566 308 618
%%HiResBoundingBox: 274.8955 566.6094 307.3271 617.2861
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 592 744
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -102 684 1 826 581 18 0 1 334 83 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k
 0 0.4 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S8.1999 22.6 m
80.6999 22.6 L
S8.1999 37.0001 m
80.6999 37.0001 L
S8.1999 51.3999 m
80.6999 51.3999 L
S8.1999 65.8 m
80.6999 65.8 L
S8.1999 15.3999 m
80.6999 15.3999 L
S8.1999 29.8 m
80.6999 29.8 L
S8.1999 44.1999 m
80.6999 44.1999 L
S8.1999 58.6 m
80.6999 58.6 L
S8.1999 73.0001 m
80.6999 73.0001 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Eye)
(Eye) 1 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2020212223242526
2728292A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414243444545464748494A4B4C
4D4E4F50505152535455565758595A5A5B5C5D5E5F60616263636465666768696A6A6B6C6D6E6F70
71717273747576777878797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F909192
9293949596969798999A9A9B9C9D9E9E9FA0A1A2A2A3A4A5A5A6A7A8A9A9AAABACACADAEAFAFB0B1
B2B2B3B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBFC0C0C1C2C3C3C4C5C5C6C7C7C8C9CACACBCCCCCDCE
CECFD0D0D1D2D2D3D4D4D5D6D6D7D8D8D9D9DADBDBDCDDDDDEDEDFE0E0E1E1E2E3E3E4E4E5E6E6E7
E7E8E8E9E9EAEBEBECECEDEDEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F7F7F7F8F8F9F9FAFAFA
FBFBFBFCFCFCFDFDFDFEFEFEFEFFFFFF
>
1 %_Br
[
1 0 41 0 %_Bs
0 0 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Eye) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u0 O
0 g
0 R
1 G
800 Ar
0 J 0 j 0.4 w 4 M []0 d%AI3_Note:0 D
0 XR
303.6572 599.2686 m
305.1201 599.9712 303.6279 602.9556 299.1694 600.5283 c
B300.0654 599.7651 m
300.0654 609.8989 L
286.625 609.8989 L
286.625 599.7651 L
B300.0654 609.8989 m
300.0654 599.7285 l
301.624 602.5 L
301.624 611.3833 L
300.0654 609.8989 L
b301.624 611.3833 m
291.7852 611.3833 L
286.625 609.8989 l
300.0654 609.8989 L
301.624 611.3833 L
bu298.8921 600.9385 m
298.8921 608.7256 L
287.7983 608.7256 L
287.7983 600.9385 L
298.8921 600.9385 L
bU297.936 598.5464 m
298.4873 597.2598 L
300.0308 598.9502 L
299.8467 599.5752 L
B297.936 598.5464 m
300.0674 599.7222 L
286.6172 599.7222 L
289.5938 598.5464 L
297.936 598.5464 L
b298.5239 597.2231 m
297.936 598.5464 L
289.5938 598.5464 L
288.8223 597.2231 L
298.5239 597.2231 L
bu280.9321 593.2715 m
280.8125 593.2715 L
280.8511 577.8599 L
280.8125 577.8369 279.6011 577.9063 279.5781 577.8369 C
279.5703 576.4863 279.5933 576.1079 279.624 574.9116 C
279.5547 574.9043 278.1812 574.9043 278.1812 574.8887 C
278.1924 579.3843 278.127 588.7788 278.0786 593.8262 C
Buu306.1113 594.3901 m
306.1304 596.3438 306.915 596.4854 307.0078 596.7705 C
307.0078 597.0796 307.0581 597.5239 307.0117 597.7861 C
306.2632 597.8096 306.1323 597.7632 305.1133 597.7861 C
283.561 597.979 L
283.561 597.9019 280.1191 597.0146 280.0576 596.9839 C
279.0078 597.0454 278.6221 596.644 277.6187 596.5977 C
277.4951 596.3198 277.6343 596.4277 277.665 596.0884 C
277.8657 595.9189 278.1587 595.8413 278.3594 595.6099 C
278.4829 594.8999 278.4868 594.6099 278.4829 594.0049 c
278.481 593.6201 278.4785 593.2344 278.4766 592.8477 C
B280.9063 592.77 m
B306.0249 593.6846 m
305.9053 593.6846 L
305.9438 578.2729 L
305.9053 578.2495 304.6938 578.3193 304.6704 578.2495 C
304.6626 576.8989 304.686 576.521 304.7168 575.3247 C
304.6475 575.3169 303.2739 575.3169 303.2739 575.3018 C
303.2847 579.7969 303.2197 589.1919 303.1709 594.2393 C
B305.5283 592.23 m
305.5283 595.2393 L
278.4404 595.6255 L
278.4404 592.8472 L
305.5283 592.23 L
b306.8018 593.5732 m
306.8018 596.6055 L
305.5283 595.2617 L
305.5283 592.252 L
306.8018 593.5732 L
b306.8623 597.7861 m
305.374 596.2427 L
277.5918 596.6289 L
283.6885 598.0947 L
306.8623 597.7861 L
bUuu294.8916 598.9312 m
B294.8916 605.0537 m
B303.2915 597.1475 m
303.2964 597.6885 L
304.1152 599.3271 L
304.1104 598.2007 L
303.2915 597.1475 L
b295.0454 597.2749 m
B303.3057 597.6885 m
304.125 599.3271 L
302.2524 599.3271 L
301.4331 597.6885 L
303.3057 597.6885 L
b301.4331 597.6885 m
303.3057 597.6885 L
303.3057 597.1621 L
301.4331 597.1621 L
301.4331 597.6885 L
b302.3696 597.4253 m
B299.0166 596.8496 m
299.0166 597.499 l
300.418 599.4375 L
300.418 598.251 L
299.0166 596.8496 L
b299.0166 597.4893 m
286.7021 597.4893 L
288.103 599.4375 L
300.418 599.4375 L
299.0166 597.4893 L
b299.0166 597.4893 m
299.0166 596.8496 L
286.6943 596.8496 L
286.6943 597.4893 L
299.0166 597.4893 L
bUU295.4922 575.4487 m
295.2876 574.0522 295.0132 573.7334 296.6172 573.4902 C
296.6172 573.4136 L
296.793 573.793 296.8706 573.0981 v
297.1792 572.0176 292.8574 573.1753 v
292.6108 573.9707 292.0703 573.5078 V
292.1475 573.4307 L
292.2959 574.0078 292.749 574.188 292.5039 575.0845 C
292.521 574.9995 L
295.4922 575.4487 L
b297.9971 597.0254 m
298.2666 597.335 298.0581 597.2046 298.3438 597.5142 c
298.7705 597.9771 299.1816 598.3911 299.5449 598.8945 c
299.7627 599.1958 299.9546 599.4917 300.1895 599.7798 c
300.4209 600.063 300.938 600.0771 301.2539 599.9219 c
301.5259 599.7881 301.6582 599.7163 301.9399 599.6401 c
302.1089 599.5947 302.2456 599.2183 302.0493 599.1934 C
302.207 599.1245 302.355 599.0303 302.415 598.8691 c
302.4277 598.8345 302.3848 598.752 302.3936 598.7236 c
302.4849 598.4434 303.022 598.167 302.7236 597.9497 c
302.5693 597.8379 302.2964 598.019 302.0767 597.9521 c
301.8887 597.8945 301.7866 597.7148 301.6455 597.5708 c
301.5034 597.4268 301.3242 597.3901 301.1519 597.3369 c
300.897 597.2578 300.665 597.1792 300.4106 597.0894 c
300.2192 597.022 300.0801 596.8809 299.8984 596.7876 c
299.4214 596.5435 299.5249 596.5347 299.0742 596.2456 C
298.7183 596.4287 298.2603 596.7217 297.9971 597.0254 C
b296.6172 573.4136 m
297.4404 573.2886 298.3242 573.6699 298.0791 573.0732 C
297.9854 572.1504 298.0703 572.0811 297.5664 571.4619 C
297.3887 571.2788 297.4053 571.4658 297.1318 571.2749 C
295.8252 571.0483 293.7974 572.3633 293.6216 571.3633 C
293.6763 571.4155 292.9795 570.5313 292.9624 570.3799 C
292.8774 570.3291 292.6904 570.4141 292.606 570.3799 C
291.7124 571.73 291.6411 572.6592 291.8389 573.4307 C
292.3794 573.8936 292.8574 573.1753 y
297.4878 572.0947 296.8706 573.0981 y
296.793 573.793 296.6172 573.4136 y
b280.7495 592.5708 m
280.1045 589.6675 279.9995 586.814 280.9331 584.0635 C
281.103 583.8594 281.3438 583.7764 281.6494 583.6401 C
283.3472 583.7593 283.2769 583.7422 285.2549 583.6914 C
287.6152 583.4873 L
287.7847 583.4365 287.9883 583.4873 288.1411 583.3687 C
289.0581 581.9595 294.3042 584.1499 294.457 582.6387 C
294.5493 583.082 292.3862 582.145 292.2656 581.0601 C
292.6899 579.3286 292.2588 575.9526 292.1738 574.3228 C
292.5415 574.0474 291.6548 573.9917 292.521 573.5332 C
293.7559 573.2246 295.4922 573.9824 Y
295.9673 574.271 296.1221 573.8062 296.6143 574.0776 C
296.7334 578.6787 296.459 581.6572 297.0874 586.0205 c
297.1553 586.9204 296.8867 586.8618 296.8354 587.4224 C
296.8018 587.7959 296.3755 587.9004 296.1548 588.2568 C
295.2363 588.4712 294.042 588.5327 293.3887 588.604 C
290.9429 589.1431 L
291.2026 589.7329 291.0225 593.0166 291.1357 593.6572 C
291.4634 593.9351 291.5454 596.0942 291.7896 596.4263 C
291.9683 598.2041 L
292.0107 597.8154 291.8516 597.2534 292.5962 596.8662 C
293.0127 596.7983 292.8433 596.6611 293.2559 596.5728 C
293.3047 596.5239 293.3535 596.4751 293.4023 596.4263 C
293.5298 596.3896 293.6543 596.3467 293.769 596.2793 C
294.1836 595.9355 294.7471 596.0356 295.1621 595.6929 C
295.7959 595.5903 296.3076 595.1831 296.9448 595.3721 c
297.1694 595.4385 297.3975 595.4697 297.6318 595.4434 C
298.2554 595.9038 298.8154 595.5684 299.25 596.1978 C
299.3809 596.354 299.9517 596.354 300.1201 596.4438 C
300.3164 596.7246 300.2739 596.4375 300.3691 596.8008 C
300.6519 596.9404 300.7822 596.8311 301.1245 596.8311 C
301.1733 596.8911 301.6055 597.8975 301.6333 598.0049 c
300.9712 599.563 299.6787 599.3506 V
298.0967 599.5166 L
297.105 599.4858 296.0586 599.5557 295.2188 600.5313 C
294.979 601.0283 L
295.1035 601.8403 L
295.3818 602.4121 294.7813 603.7319 294.6196 604.4355 C
293.7397 605.0811 294.2603 604.6152 293.3662 605.3193 C
281.4063 606.4536 L
281.2876 606.3896 281.0713 606.375 280.9907 606.3896 C
280.0371 606.3604 279.2749 606.5361 278.4243 605.9644 C
278.2192 605.4805 277.8232 604.7036 277.8672 604.1313 C
278.0874 603.3252 276.6138 603.4131 277.0244 602.5771 C
277.2295 602.3135 277.127 602.02 277.2295 601.7705 C
277.0244 600.627 277.2734 601.668 277.0244 600.6855 C
276.9434 600.6782 L
275.624 597.1958 275.1064 593.5493 Y
275.1992 593.4414 275.3076 593.3486 275.3691 593.2407 C
276.1411 592.3145 280.3315 591.0723 Y
280.3467 591.1187 L
B285.5796 574.6177 m
285.0884 574.1182 284.8018 573.7153 284.6738 573.3247 C
285.2139 574.0962 285.8384 573.2451 y
287.3818 572.6279 288.0762 572.3188 y
290.1211 572.4873 289.4277 573.6372 Y
288.397 574.0806 288.105 574.3701 288.1655 574.5576 C
B284.8242 580.0347 m
284.2046 575.6113 l
283.8296 574.3086 l
287.3545 573.7686 L
287.4712 573.7861 L
287.5313 573.9731 288.3301 573.6719 288.709 573.7056 C
289.2207 573.9995 288.7837 573.7954 289.3091 574.0718 C
289.2549 574.1499 289.1704 575.7183 289.1885 580.1045 c
B286.3896 569.8882 m
286.8911 573.3223 l
B286.6211 574.0361 m
B295.5381 583.5586 m
Bu285.4487 582.8691 m
285.6904 582.9116 285.8521 583.1421 285.8096 583.3838 C
284.8545 588.8174 L
284.812 589.0591 284.5815 589.2202 284.3398 589.1777 C
283.0107 588.9443 L
282.769 588.9019 282.6079 588.6714 282.6499 588.4297 C
283.605 582.9966 L
283.6475 582.7549 283.8779 582.5933 284.1196 582.6357 C
285.4487 582.8691 L
b284.2295 585.9067 m
BU284.9619 581.6572 m
B285.5405 574.7266 m
284.6455 574.5264 283.5879 574.6807 283.5107 574.125 c
283.4336 573.5693 283.8428 573.4536 284.2441 573.4302 C
B295.2666 582.9072 m
295.5142 583.1592 295.5454 583.2402 295.5454 583.4858 C
295.5454 586.4326 L
295.5454 586.6782 295.3467 586.8774 295.1011 586.8774 C
291.8501 583.7407 L
291.6045 583.7407 291.4058 583.5415 291.4058 583.2964 C
291.4058 580.0176 L
291.4058 579.7725 291.6045 579.5732 291.8501 579.5732 C
295.2666 582.9072 L
b279.1431 595.062 m
279.0732 595.7256 279.8848 597.5146 279.9141 598.0571 c
279.7681 597.4565 279.647 594.6836 279.8018 594.2788 C
279.1431 595.062 L
b278.5728 589.0156 m
278.5107 589.2056 L
278.7295 591.1743 277.6753 593.9688 279.8477 595.2974 C
289.1074 595.3398 281.875 595.0796 291.1323 595.1021 C
291.6763 594.6904 L
292.8281 594.854 292.5415 588.8989 y
291.7144 588.3711 l
B277.623 588.4727 m
277.8418 590.4414 276.6719 594.0459 278.8447 595.3745 C
288.0942 595.417 281.4575 595.311 290.708 595.3335 C
290.9043 595.231 L
292.0562 595.394 291.6924 588.3975 Y
277.623 588.4727 L
b291.4043 611.4341 m
291.4375 611.2788 291.4858 611.1982 V
291.4727 610.7764 291.7212 610.4111 291.7441 609.9971 C
291.6021 609.7896 291.4316 609.6011 291.3193 609.373 C
290.9888 609.1997 290.603 609.2412 290.2637 609.1016 C
289.936 608.8408 289.7402 608.4468 289.374 608.2256 C
288.9453 608.1309 288.502 608.1675 288.0996 607.9736 C
287.8623 607.7456 287.5566 607.5923 287.376 607.3037 C
286.9727 607.0239 286.4902 607.0723 286.0352 607.1313 C
285.832 607.2617 285.5991 607.3384 285.4043 607.4834 C
284.9268 607.9888 284.4365 608.4805 283.918 608.9443 C
283.502 608.9521 283.0845 608.9116 282.6704 608.9844 C
282.3911 609.1182 282.2178 609.4092 281.9072 609.4961 C
281.7349 609.9053 281.52 610.2979 281.5127 610.7446 C
281.4688 610.7979 281.3037 610.8911 281.4033 610.9922 C
282.9233 611.5161 282.124 612.6064 282.3594 613.5713 C
283.0806 614.0503 282.376 614.415 282.6626 614.978 C
283.2275 617.1348 285.7876 616.7261 287.5283 617.0825 C
288.0352 616.9922 288.6021 617.0728 288.7427 616.5151 C
288.7202 616.4292 289.3096 616.353 289.2124 616.2588 C
289.5684 615.7993 289.6602 616.0884 290.0571 615.5957 C
290.4199 615.0752 290.2979 614.8862 290.396 614.6919 C
290.8857 614.0879 291.3882 613.7632 291.458 612.918 C
291.4917 612.4805 291.2217 612.1001 291.1152 612.0654 C
291.333 611.5449 291.6187 612.0107 291.4043 611.4341 C
B291.9038 606.6104 m
291.8745 606.5 291.811 606.4106 291.731 606.3315 C
291.2871 606.3691 291.4351 605.2773 291.0459 605.4351 C
290.814 605.3145 290.5928 605.5425 290.3755 605.5806 C
290.2085 605.4927 290.0186 605.4751 289.8442 605.4082 C
289.6138 605.1709 289.3057 605.0718 288.9946 604.9702 C
287.8428 605.2617 286.813 604.5938 285.7021 604.3872 C
285.4341 604.395 284.7109 604.2261 284.6323 604.5264 C
284.085 604.8604 283.9956 605.5322 283.4858 605.915 C
282.7559 605.9814 282.0259 606.0479 281.2954 606.1147 C
281.1714 606.1616 281.0928 606.2964 280.9438 606.2939 C
280.9375 606.5586 280.8755 606.6221 280.8027 606.8311 C
280.7695 606.9028 280.5742 607.0601 280.709 607.1177 c
280.8335 607.1704 280.8657 607.2817 280.5757 607.4922 C
280.3755 608.2026 280.7793 610.4102 281.2983 610.937 c
281.1987 610.8359 281.4722 611.0068 281.5161 610.9536 C
281.5229 610.5068 281.6689 610.082 281.8408 609.6724 C
282.1514 609.5854 282.3247 609.2944 282.604 609.1611 C
283.0186 609.0879 283.4355 609.1284 283.8521 609.1206 C
284.3706 608.6567 284.8604 608.165 285.3384 607.6597 C
285.5327 607.5146 285.7656 607.438 285.9688 607.3076 C
286.4238 607.2485 286.9063 607.2002 287.3096 607.48 C
287.4907 607.7686 287.7964 607.9219 288.0332 608.1499 C
288.436 608.3438 288.8789 608.3071 289.3081 608.4019 C
289.6743 608.623 289.8696 609.0171 290.1978 609.2778 C
290.5371 609.4175 290.9224 609.376 291.2529 609.5493 C
291.3652 609.7773 291.5356 609.9658 291.6782 610.1733 C
291.6553 610.5874 291.4067 610.9531 291.4194 611.375 C
291.3716 611.4556 291.293 611.4985 291.1807 611.5806 c
291.3379 611.6104 L
293.0396 610.125 291.1582 608.4629 292.0117 606.9644 C
291.9038 606.6104 L
b289.4463 571.5586 m
289.1973 571.4722 288.5034 571.3638 288.1733 571.314 C
286.9937 571.7036 288.2637 571.4956 286.5088 571.7471 C
286.0464 571.3486 286.1895 570.5835 286.0254 569.9756 C
285.9341 569.9233 285.7656 570.0107 285.6772 569.9766 C
284.8921 571.647 284.3887 572.4546 284.6738 573.3247 C
285.2139 574.0962 285.8384 573.2451 y
287.3818 572.6279 288.0762 572.3188 y
290.1211 572.728 289.4277 573.6372 y
290.4307 573.4829 290.3916 573.5537 y
290.9316 573.2451 289.4463 571.5586 Y
b284.792 579.9282 m
284.8384 575.8848 284.8691 579.1411 284.8232 575.1436 C
284.8848 575.02 284.7148 574.8193 284.5605 574.7266 C
283.6655 574.5264 282.585 574.9507 282.5308 574.125 C
282.4536 573.5693 282.8628 573.4536 283.2642 573.4302 C
282.2764 572.6279 281.335 571.6245 280.3779 570.8838 C
279.6831 570.0654 280.0693 569.3403 280.0073 568.3984 C
280.2695 568.0747 280.5479 568.2441 280.9336 568.3525 C
280.8408 569.0625 281.0259 569.5562 281.0107 570.1738 C
282.23 571.2539 283.4492 572.3188 284.6841 573.3994 C
284.7764 573.4302 284.8232 573.353 284.8999 573.3223 C
284.5449 571.501 283.7886 568.8311 284.082 567.21 C
284.1284 567.1021 284.0669 566.9014 284.2671 566.8091 C
284.5605 566.7627 285.0234 566.5313 285.1934 566.8706 C
285.3096 567.9482 284.9365 568.793 285.4868 570.0195 C
285.4248 569.9883 285.4561 570.0503 285.4868 570.0195 C
285.6563 569.479 285.5791 569.1704 285.564 568.5376 C
285.9033 568.4912 286.3662 568.3062 286.5669 568.7227 C
286.7061 569.8652 286.3354 571.1304 286.2275 572.6123 C
286.2739 572.7666 286.1504 572.9053 286.3511 573.0601 C
287.5088 572.3037 288.6045 571.0532 289.7466 570.2046 C
290.2095 569.7417 290.04 568.1519 y
290.7344 567.9971 290.8887 568.0747 Y
291.0044 568.0747 L
291.3135 569.7725 290.6187 570.8911 v
287.5317 573.4458 L
287.5703 573.4844 288.1724 573.4688 288.311 573.5073 C
288.7588 573.6929 288.8516 574.125 288.6045 574.5107 C
288.1567 574.5879 287.8403 574.6343 287.2383 574.6499 C
286.9146 574.6265 286.9067 574.8452 286.9067 575.5449 C
286.9531 579.2954 286.814 575.9463 286.9375 579.7432 c
B288.2451 574.5957 m
288.4902 574.5957 288.6895 574.3965 288.6895 574.1514 C
288.6895 573.9209 L
288.6895 573.6758 288.4902 573.4766 288.2451 573.4766 C
288.1489 573.4766 L
285.6226 572.8594 283.0371 573.4766 V
282.7915 573.4766 282.5928 573.6758 282.5928 573.9209 C
282.5928 574.1514 L
282.5928 574.3965 282.7915 574.5957 283.0371 574.5957 C
285.3525 573.8237 288.2451 574.5957 Y
bu283.6499 590.4438 m
284.2227 590.4438 284.6865 590.9326 284.6865 591.5352 c
284.6865 592.1382 284.2227 592.6265 283.6499 592.6265 c
283.0771 592.6265 282.6128 592.1382 282.6128 591.5352 c
282.6128 590.9326 283.0771 590.4438 283.6499 590.4438 c
b283.6499 591.5352 m
BUu283.2642 590.3667 m
283.8364 590.3667 284.3008 590.8555 284.3008 591.458 c
284.3008 592.0605 283.8364 592.5493 283.2642 592.5493 c
282.6914 592.5493 282.2271 592.0605 282.2271 591.458 c
282.2271 590.8555 282.6914 590.3667 283.2642 590.3667 c
b283.2642 591.458 m
BU283.5342 583.625 m
285.8105 583.5864 l
B291.6558 579.5732 m
291.9014 579.5732 292.1006 579.7725 291.7329 580.1401 C
291.7329 583.4189 L
292.1006 583.5415 291.9014 583.7407 291.6558 583.7407 C
281.4502 583.7407 L
280.8916 584.0493 L
280.646 584.0493 277.8232 583.812 277.8232 583.5664 C
277.8232 580.0176 L
277.8232 579.7725 278.022 579.5732 278.2676 579.5732 C
291.6558 579.5732 L
b278.6924 579.7778 m
278.4712 579.7778 278.2925 579.957 278.2925 580.1777 C
278.2925 583.1284 L
278.2925 583.3496 278.4712 583.5283 278.6924 583.5283 C
290.7417 583.5283 L
290.9624 583.5283 291.1416 583.3496 291.1416 583.1284 C
291.1416 580.1777 L
291.1416 579.957 290.9624 579.7778 290.7417 579.7778 C
278.6924 579.7778 L
b284.9727 581.6572 m
B295.0186 583.0449 m
295.3022 583.3042 295.2446 583.7241 295.2446 583.4307 C
295.2446 586.0532 L
295.2446 586.2744 295.0654 586.4531 294.8833 586.3374 C
292.1245 583.6787 L
291.8916 583.4814 291.7529 583.2383 291.7529 583.0171 C
291.7529 580.5581 L
291.7529 580.3374 291.9321 580.1582 292.1528 580.1582 C
295.0186 583.0449 L
b278.2954 588.8057 m
278.4922 590.5776 277.4395 593.8218 279.3945 595.0176 C
287.7192 595.0562 281.7461 594.9604 290.0713 594.981 C
290.248 594.8882 L
291.2852 595.0352 290.9575 588.7378 Y
278.2954 588.8057 L
bUU1 Ap
281.0605 584.394 m
282.041 583.7817 L
278.2432 583.7817 L
280.4482 585.1289 L
281.0605 584.394 L
bULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
